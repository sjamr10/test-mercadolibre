@import 'app/assets/scss/utils.scss';

@mixin input-common-style() {
  @include border();
  @include appearance();
  border-radius: $border-radius-3;
  transition: all 200ms ease-out;
  font-size: $font-size + 2;
  outline: none;
  width: 100%;
  color: $text-color;
}

input {
  box-shadow: none;
}

.rcc-input {
  text-align: center;

  &.is-disabled {
    input {
      background-color: #f9f9f9 !important;
      color: #aaa !important;
    }
  }

  .content {
    width: 100%;
    position: relative;

    .label-small {
      font-size: 1rem;
      margin-bottom: 2px;
      width: 85%;
    }

    .control-group {
      &.control-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
      .input-control {
        @include input-common-style();
        padding: 8px 15px;

        @include media-breakpoint-down(md) {
          padding: 12px 15px;
        }

        &:active,
        &:focus {
          @include border(2px, $primary);
        }

        @include media-breakpoint-down(sm) {
          font-size: $font-size-mobile + 2;
        }
      }

      .icon {
        height: 0px;
        position: absolute;
        float: right;
        pointer-events: none;
        color: $light-gray;
        transition: all 200ms ease-out;
        top: 50%;
        margin-top: -7.5px;
        right: 15px;
        z-index: 10;

        &.success {
          color: $primary;
        }

        &.error {
          color: $red;
        }

        &.show {
          opacity: 1;
        }

        &.hide {
          opacity: 0;
        }
      }
      .icon-show .Select-arrow-zone {
        padding-right: 35px;
      }
    }

    .error-message {
      position: absolute;
      transform: translateX(20px);
      bottom: -18px;
      margin-left: 5px;
      width: 100%;
      height: auto;
      color: $error;
      text-align: left;

      &.has-error {
        transition: opacity 150ms ease-out, transform 300ms ease-in;
        opacity: 1;
        transform: translateX(0);
      }

      &.no-error {
        transition: opacity 600ms ease-out 1.5s, transform 200ms ease-in 2s;
        opacity: 0;
      }
    }
  }

  .input {
    position: relative;
  }

  &.has-error {
    input {
      border: 2px solid $red !important;
    }
  }
}

/* replacing react-select styles */
.rcc-select {
  text-align: left;

  .Select-control {
    border: none;
    padding: 3px 6px;
    @include media-breakpoint-down(md) {
      padding: 8px 6px;
    }
    border-radius: inherit !important;
  }

  .Select-value,
  .Select-placeholder {
    padding: 3px 15px !important;
    @include media-breakpoint-down(md) {
      padding: 6px 15px !important;
    }
  }

  .Select {
    @include input-common-style();

    &.is-open > .Select-control {
      border-radius: inherit !important;
    }

    &.is-focused,
    &.is-open,
    &.is-pseudo-focused {
      @include border(2px, $primary);
    }

    .Select-option.is-focused {
      @include background-opacity($primary, 0.1);
    }

    .Select-menu-outer {
      box-shadow: 0px 0px 6px rgba(0, 0, 0, 0.3);
      border: 1px solid $moon-gray;
      border-radius: $border-radius-3;
      margin-top: 5px;
      border-color: transparent;
      z-index: 99999;

      .Select-option:first-child {
        border-top-left-radius: $border-radius-3;
        border-top-right-radius: $border-radius-3;
      }
    }
  }
}

.rcc-input-range {
  margin-bottom: 40px;

  .input-range__label--value {
    top: -2.9rem;
  }

  .input-range__label-container {
    top: 0.3rem;
    font-size: 1rem;
  }

  .input-range__label--value,
  .input-range__label--max,
  .input-range__label--min {
    font-weight: bold;
  }

  .input-range__track--active {
    background-color: $primary;
  }

  .input-range__slider {
    background-color: $primary;
    border: 4px solid $primary;
    width: 1.8rem;
    height: 1.8rem;
    margin-top: -1.15rem;

    &:active {
      transform: scale(1.1);
    }
  }
}
